openapi: 3.0.3
info:
  title: Project Management API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /projects:
    get:
      summary: Get all projects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created

  /projects/{projectId}:
    put:
      summary: Update a project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated
    delete:
      summary: Delete a project
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Project deleted

  /projects/{projectId}/tasks:
    get:
      summary: Get project tasks
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of tasks for a project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /projects/statuses:
    get:
      summary: Get project statuses
      responses:
        '200':
          description: A list of project statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectStatus'

  /tasks:
    get:
      summary: Get all tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created

  /tasks/{taskId}:
    put:
      summary: Update a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated
    delete:
      summary: Delete a task
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted

  /tasks/tag/{tagId}:
    get:
      summary: Get tasks by tag
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tasks with the given tag
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /tasks/status/{statusId}:
    get:
      summary: Get tasks by status
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tasks with the given status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /tasks/statuses:
    get:
      summary: Get task statuses
      responses:
        '200':
          description: A list of task statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskStatus'
    post:
      summary: Create a new task status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskStatus'
      responses:
        '201':
          description: Task status created

  /tags:
    get:
      summary: Get all tags
      responses:
        '200':
          description: A list of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
    post:
      summary: Create a new tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '201':
          description: Tag created

  /tags/{tagId}:
    put:
      summary: Update a tag
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tag updated
    delete:
      summary: Delete a tag
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Tag deleted

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        status_id:
          type: integer
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        project_id:
          type: integer
        status_id:
          type: integer
        deadline:
          type: string
          format: date-time
    Tag:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
    ProjectStatus:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    TaskStatus:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
