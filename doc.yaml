openapi: 3.0.0
info:
  title: Project Management API
  description: API for managing projects, tasks, and tags
  version: 1.0.0

servers:
  - url: http://localhost:3000/api
    description: Go server

  - url: http://localhost:xxx/api
    description: Python server

  - url: http://localhost:xxx/api
    description: Elixir server

paths:
  /projects:
    get:
      summary: Get all projects
      description: Returns a list of all projects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
  
  /projects/{projectId}/tasks:
    get:
      summary: Get all tasks in a project
      description: Returns a list of all tasks belonging to a specific project
      parameters:
        - name: projectId
          in: path 
          required: true
          schema:
            type: integer
          description: ID of the project
      responses:
        '200':
          description: A list of tasks in the project
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: Project not found
  
  /projects/statuses:
    get:
      summary: Get all project statuses
      description: Returns a list of all possible project statuses
      responses:
        '200':
          description: A list of project statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectStatus'

  /tags:
    get:
      summary: Get all tags
      description: Returns a list of all tags
      responses:
        '200':
          description: A list of tags
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  
  /tasks/{tagId}:
    get:
      summary: Get all tasks by tag
      description: Returns a list of all tasks associated with a specific tag
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the tag
      responses:
        '200':
          description: A list of tasks with the specified tag
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: Tag not found
  
  /tasks/{statusId}:
    get:
      summary: Get all tasks by status
      description: Returns a list of all tasks with a specific status
      parameters:
        - name: statusId
          in: query
          required: true
          schema:
            type: integer
          description: ID of the task status
      responses:
        '200':
          description: A list of tasks with the specified status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  
  /tasks/statuses:
    get:
      summary: Get all task statuses
      description: Returns a list of all possible task statuses
      responses:
        '200':
          description: A list of task statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskStatus'

components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Website Redesign"
        description:
          type: string
          example: "Complete redesign of company website"
        status_id:
          type: integer
          example: 2
    
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "Create wireframes"
        description:
          type: string
          example: "Design wireframes for all pages"
        project_id:
          type: integer
          example: 1
        status_id:
          type: integer
          example: 3
        deadline:
          type: string
          format: date-time
          example: "2023-12-31T23:59:59Z"
    
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: "UI"
        description:
          type: string
          example: "User interface related tasks"
    
    ProjectStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Not Started"
    
    TaskStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "To Do"